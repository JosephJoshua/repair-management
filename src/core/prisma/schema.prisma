generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
  output          = "generated"
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgTrgm(map: "pg_trgm")]
}

model Store {
  storeId      String       @id @default(cuid()) @map("store_id")
  name         String
  slug         String
  address      String
  phoneNumbers String[]     @map("phone_numbers")
  createdAt    DateTime     @default(now()) @map("created_at")
  updatedAt    DateTime     @updatedAt @map("updated_at")
  activatedAt  DateTime?    @map("activated_at")
  disabledAt   DateTime?    @map("disabled_at")
  deletedAt    DateTime?    @map("deleted_at")
  technicians  Technician[]
  users        User[]
  Supplier     Supplier[]
  Damage       Damage[]
  Condition    Condition[]

  @@map("stores")
}

model Technician {
  technicianId String    @id @default(cuid()) @map("technician_id")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  deletedAt    DateTime? @map("deleted_at")
  name         String
  storeId      String    @map("store_id")
  store        Store     @relation(fields: [storeId], references: [storeId])

  @@index([name(ops: raw("gin_trgm_ops"))], type: Gin)
  @@index([storeId, createdAt])
  @@map("technicians")
}

model Supplier {
  supplierId String    @id @default(cuid()) @map("supplier_id")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  deletedAt  DateTime? @map("deleted_at")
  name       String
  storeId    String    @map("store_id")
  store      Store     @relation(fields: [storeId], references: [storeId])

  @@index([name(ops: raw("gin_trgm_ops"))], type: Gin)
  @@index([storeId, createdAt])
  @@map("suppliers")
}

model Damage {
  damageId  String    @id @default(cuid()) @map("damage_id")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  name      String
  storeId   String    @map("store_id")
  store     Store     @relation(fields: [storeId], references: [storeId])

  @@index([name(ops: raw("gin_trgm_ops"))], type: Gin)
  @@index([storeId, createdAt])
  @@map("damages")
}

model Condition {
  conditionId String    @id @default(cuid()) @map("condition_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")
  name        String
  storeId     String    @map("store_id")
  store       Store     @relation(fields: [storeId], references: [storeId])

  @@index([name(ops: raw("gin_trgm_ops"))], type: Gin)
  @@index([storeId, createdAt])
  @@map("conditions")
}

model User {
  userId     String    @id @default(cuid()) @map("user_id")
  username   String
  password   String
  profileUrl String?   @map("profile_url")
  role       String
  storeId    String    @map("store_id")
  store      Store     @relation(fields: [storeId], references: [storeId])
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  deletedAt  DateTime? @map("deleted_at")

  @@map("users")
}
